@use "sass:list"; //list.length 배열 함수 쓰기 위해서 사용한다.
@use "../abstracts/" as *;

%iconButtion {
  display: inline-block;
  width: rem(20);
  height: rem(20);
  .hdeader & {
    width: rem(32);
    height: rem(32);
  }
}

.btn-prev {
  @include background("ico_prev.svg", center);
  @extend %iconButtion;
}
.btn-search {
  @include background("ico_search.svg", center);
  @extend %iconButtion;
}

.btn-menu {
  @include background("ico_menu.svg", center);
  @extend %iconButtion;
}
.btn-more {
  font-size: rem(12);
  color: #989898;
  font-weight: 600;
}

.btn-home {
  @include background("ico_nav_home.svg", center);
}
.btn-map {
  @include background("ico_nav_map.svg", center);
}
.btn-bookmark {
  @include background("ico_nav_bookmark.svg", center);
}
.btn-user {
  @include background("ico_nav_user.svg", center);
}

.search__filter {
  width: rem(52);
  border-radius: 1rem;
  background: $button-blue;
  box-shadow: 0 2px 5px rgba(48, 141, 255, 0.2);
  flex-shrink: 0;
  margin-left: rem(12);

  > i {
    @include background("ico_filter.svg", center);
    overflow: hidden;
    color: transparent;
    width: rem(21);
    display: inline-block;
  }
}

// ****다중클래스 버튼 구분****
// 공통
// - .btn: 버튼 전체의 속성
//    box-sizeing, inline-flex, align-items, gap
// 크기
// - btn.base / btn.lg / btn.sm / btn.xl / btn.xs
//   높이, 크기, 좌우여백, 외곽선굵기
// 색상
// -btn.blue/ btn.white / .btn.gray
//  배경색,글씨색, 외곽선색
// 아이콘
// - btn.ico1 /btn.ico2
//   방향(befor, after),크기/배경이미지
// 추가옵션
// - 좌우크기(width:100%):fullsize
//   모서리둥글기(border-radius): rounded /frounded-full

//1.공통 btn  정의

$buttonSize: (
  1: (
    "className": ".small",
    "height": 32,
    "fontSize": 12,
    "paddingInline": 7,
    "fontWeight": 500,
  ),
  2: (
    "className": ".base",
    "height": 50,
    "fontSize": 17,
    "paddingInline": 20,
    "fontWeight": 600,
  ),
  3: (
    "className": ".lg",
    "height": 60,
    "fontSize": 20,
    "paddingInline": 20,
    "fontWeight": null,
  ),
);
$buttonColor: (
  1: (
    "className": ".skyblue",
    "bgColor": rgba($btnBlue, 0.1),
    "color": $fontSkyblue,
  ),
  2: (
    "className": ".blue",
    "bgColor": $primary,
    "color": $white,
  ),
  3: (
    "className": "white",
    "bgColor": $gray67,
    "color": $white,
  ),
);

@mixin buttonSize($varName, $index) {
  &#{map-get($varName, $index, className)} {
    height: rem(map-get($varName, $index, height));
    font-size: rem(map-get($varName, $index, fontSize));
    padding-inline: rem(map-get($varName, $index, paddingInline));
    font-weight: map-get($varName, $index, fontWeight);
  }
}
.btn {
  // display: flex;
  // gap: rem(10);
  // align-items: center;
  // box-sizing: border-box;
  // text-align: center;

  @for $idx from 1 through list.length($buttonSize) {
    @include buttonSize($buttonSize, $idx);
  }
  &.fullsize {
    width: 100%;
  }
}

// @mixin buttonColor($varName, $index) {
//   &#{map-get($varName,$index,className)} {
//     background-color: map-get($varName, $index, bgColor);
//     color: map-get($varName, $index, Color);
//   }
// }
// .btn {
//   @for $index from 1 through list.length($buttonColor) {
//     @include buttonColor($buttonColor, $index);
//   }
// }

@mixin buttonColor($varNmae, $index) {
  &#{map-get($varNmae, $index, className)} {
    background-color: map-get($varNmae, $index, bgColor);
    color: map-get($varNmae, $index, color);
  }
}
.btn {
  @for $index from 1 through list.length($buttonColor) {
    @include buttonColor($buttonColor, $index);
  }
}
